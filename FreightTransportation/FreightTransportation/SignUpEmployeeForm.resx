<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAA3NJREFUeF7tmc9PE0EUx3uAVrNuiXjkbKJRDurBqP+EieEf0AuttB7FixxNTCBS
        jBzVCPpXaIwxICeIVAu97LZ4AkNFiDG2OM5b3ui4fUt3YWl34X2TT7LZNzP7vm9+LF0SLBaLxWKxWCwW
        i8ViRV/G7Wp/OmONS4pmxtoC4DqdtR4Zg9Xz2OwQKldOmRn7iTS7nc7agsZqmFnrcWKgmMReh0RgPmu/
        oU03I4vw+lAVQZqfpIzuhtwaE9g93sI9/9+ylwWp9gzaN07dLJnAiYx1Xd5f0tvAdjCylXM4THwFh5tu
        DMynb1V7MfxXPZnKSSemtU1n7DEMx1eyAJ90UzDzGGqSLMKA3lb2XcRQfCVn9btuCpY8hprUmyun9bbQ
        F0PxlW4IwNueCto+8gpqKGj7yCuooaDtI6+ghoK2j67GRaqrIPKphz9FsvBbdE+IQEAf6Ns1IXIwFo4a
        Dx2fFH0y8QXK2F6QhZyHMXH4iAtmPkTzCihCLFYCLHvKQBjIsYfwMdGVTHTOnXiIzOJjoqvugtgkEg8H
        OTY+prXKZZEq2et5yYclu7a1VKmJdkAm7iI5+ksYd1eFmas6wDXco9q6QXu7a7n6ta9UqS1QCR40VNI6
        YBRMu9/3cC85Wif76KBFbzkz3yHzAJW0jjG82mReATGqjw7a9BYseyqxdkElrWPmm2dfYeZWyD46aNNb
        sgBzVGLtgkpax8yvkOYB2AZUHx206S154G1SibULKmkd494aaR4whtfIPjpo01tUUsCVl3VxcaohZsrf
        HC68aIjL0/U9x+H6qryn4goqaZ3kWJ1cBbD8IUb10UGb3nInpICEYYAzzxoOcA0m9xO/NBW8AAAYdRfA
        j3kAbXrLnZACZu3s853EgdNPt8X78kZocYWKt8JdAKoNBdr0ljshxZEvAL2EWy1x/3EF3PeDfg6Yd76Q
        bSjQprfcCSngwII9CzMJQPLXXv3bw/uNK6ikKY49+OEUAczDNdWGAm16q9OvwZ7J4F9/ArCBNr3V6T+E
        1FY5IFr/HJYFyFGJtYv7b/0v56D4+iCy82NofZ5Krh18tGqiX3tbhIXzSWxE+PuX+c7P4c4V4d3yRqhF
        APOBP4oWiyL52V4fkgnNduJgXJQrYURuB3hz7OlghC9LBTHjLHu/M89isVgsFovFYrFYrCOhROIPnh2E
        FKTIUB8AAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAD6lJREFUeF7t3X2oJXd9x/FJfAIx0VYjKkXJZptk75yzBkJtQGh8CIqItv4h/u3D
        X1Y0tFFDI6xUjE0p+E+F/FHvjcawuiBR0c2dOcZLqc3dFknzh1mNsq2KIPiUrN0QH0q2vzl3ktU9nz17
        vvOduef3+837BW+ybHZ/8/C95+zduXtnCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARuHa+15alNUHi0ldFZPqZPjxKaIL1nyM
        NB8rZX1LsbHzkvajCOk5e0kY4m2hx8NAzxKZK+szxWR26/xjCSk5cmkY4NGFgRJ1qazumX9MIRGT+mML
        QyTydaT96ELUDldXhmH9+rzhEXn7TVHef1X7UYZoTeo7zhscUT+V9e3tRxmiNakfWhgcUS9VD7YfZYjW
        pD69ODiiHiqrR9uPMkRLDY6orxA5NTSivkLk1NCI+gqRU0Mj6itETg2NqK8QOTU0or5C5NTQiPoKkVND
        I+orRE4NzdJ0doAyTs3cEiKnhmYJeVMzt4TIqaFZQt7UzC0hcmpolpA3NXNLiJwamiXkTc3cEiKnhmYJ
        eVMzt4TIqaFZQt7UzC0hcmpolpA3NXNLiJwamiXkTc3cEiKnhmYJeVMzt4TIqaFZQt7UzC0hcmpolpA3
        NXNLiJwamiXkTc3cEiKnhmYJeVMzt4TIqaFZQt7UzC0hcmpolpA3NXNLiJwamiXkTc3cUlmdSrpJ9XDo
        vqKsby42dl7SnpWMqKFZQt7UzMdaWZ8J3ZLXo8/VgVpC3tTM6Whx484z2zOUOH2Aq4e8qZlTqPpke4YS
        Jw/OEPKmZk5P9c72LCVMH9jqIW9q5tRWPVGUsz9rz1Si5IEZQt7UzOn3qn5YHK5e3J6tBMmDMoS8qZnT
        eVX/Vmwce3Z7xhIjD8jQ2Hzr7pcWJ7Y+WOxuVsWJzZPF7taptTbfh/m+3FL8x1b/X6dWMydRqhcF5cEY
        GouzZy8JL7jbQo+HN4CzUba7eSbs363zfe2LmjldqAQvCuoDWb0xOHvk0vAn7FH5ooux3a175vvcBzVz
        ukApXhSUB2JoDE5sfWzhRRZ9m0favfdRM6clpXZRUB6Eodyd+OyV4QX168UXWOTtbv6m+OZdV7VH0Z2a
        OV2klC4KygMwlLvdzTvkCyyFdrdub4+iOzVzWqFULgrKnTeUu92th+SLK4k2H2yPojs1c1q1BC4K6h1f
        vdztbp7WL64E2t18tD2K7tTMacVSuCgod9xQ7mL+st/Far4s6KVmbmk6O+BKrWlJrbmssvonuU7nqh8U
        1x2/oj2bEZI7bSh3u5uPyBdXCu1ufbc9iu7UzC15qTUtmR25NLwJfE2u1bmYLwrKHTaUu92tO+WLK40+
        1R5Fd2rmlrzUmpa6mH71j8Lv/f7CWq5ivSgod9ZQ7k5s3RA+C3jyvBdW/DX7/MBdr2qPojs1c0teak1L
        XZX1ofD7Ty+s5yvCi4J6R1dvDFL6V4BPt/m5du991Mwteak1LXlMqreFnpTrdirGi4JyRw2NwTf/5bK0
        vhy4+WCx88/Pa/feR83ckpda05JXWf2DXLdzsf1LQbmThsbixN2Xh0+r79UvuKj64vwNqy9q5pa81JqW
        3HK/KCh30NDYPPDpm8JnA8dCj4kX33pqvt7f7NOJzde1e9kfNXNLXmpNS33I+qKg3DlDY9Z8VvCfnz6w
        1pp9GJKauSUvtaalvmR7UVDv2Oohb2rmlrzUmpb6lOVFQbljhpA3NXNLXmpNS33L7qKg3ClDyJuauSUv
        taal3uV2UVDukCHkTc3ckpda09IQsrooKHfGEPKmZm7JS61paSjZXBTUO7J6yJuauSUvtaalIWVxUVDu
        iCHkTc3ckpda09LQkr8oKHfCUGxiu2//0MX+XAAvtaalwTUXBevjctud28+LgnIHDMUihfv2D12MzwXw
        Umta2g9JXxSUGzcUg9Tu2z90MT0XwEutaWm/JHtRUG949WKQ5H37hy6S5wJ4qTUt7ackLwrKDRtat1Tv
        2z90sTwXwEutaWm/JXdRUG7U0LqlfN/+oYvhuQBeak1L+y61i4Jyg4bWLen79g9dBM8F8FJrWlqHpC4K
        yo0ZWreU79s/dDE8F8BLrWlpXaazafhM4Izcp+4NcFFQb2j11m3MX/a7WDE8F8BLrWlpnZK4KCg3ZGjd
        Ur5v/9DxXID1f3xO6jsW9slV3xcF5UYMrVva9+0fOp4LsHaxXxSUGzC0bqnet3/oeC7AXjHY2P7joqxO
        yf3rWln/fbu6k1rcUgz4V4AingswLxaTrx/u9aJgWf02/FXgynZ1B7W4pRgkd9/+oeO5AE8Xk3L7Hf1e
        FKzvaFd20AuvXizSuW//0PFcgN8vNv1eFPyvdlUHvfDqxSbG+/YPHc8FuHDR6fWi4K/aRR30wqsXsxju
        2z90PBdgec3Ft9iaVD+R+9olN7WoJeRNzdySl1qTzuWmFrWEvKmZW/JSa9K53NSilpA3NXNLXmpNOpeb
        WtQS8qZmbslLrUnnclOLWkLe1Mwteak16VxualFLyJuauSUvtSady00tagl5UzO35KXWpHO5qUUt9W1s
        9/X3lvtzAcr6cbku7eWmFrXUF+7r7y/H5wKU1SNyXdrLTS1qqQ/c17/fcnouQFnfKdelvdzUopb6wH39
        ByiT5wJM6xt6/g66vHJTi1ry4r7+w5TLcwEak/rowrq0l5ta1JIX9/UfrhyeC9C45kuXhbUeWlibcngD
        4EYew5XBcwGecvD45UVZ3yu3Mebc1KKWvLiv/3Dl8FyA801nN4U3gmNFWT0mtze23NSilrz4st9w5fBc
        gGWazwqmswNJp86ZJTe1qCUv7us/XDk8FyB36pxZclOLWvLivv5Dlv5zAXKnzpklN7WoJS/u6z9MuTwX
        IHfqnFlyU4ta6gP/CnCAMnkuQO7UObPkpha11Afu699zGT0XIHfqnFlyU4ta6gv39e+rvJ4LkDt1ziy5
        qUUt9W2M9/X3lvNzAXKnzpklN7WopSGN4b7+3nJ/LkDu1Dmz5KYWtYS8qZlbwnLqnFlyU4taQt7UzC1h
        OXXOLLmpRS0hb2rmlrCcOmeW3NSilpA3NXNLWE6dM0tualFLyJuauSUsp86ZJTe1qCXkTc3cEpZT58yS
        m1rUEvKmZm4Jy6lzZslNLWoJeVMzt4Tl1Dmz5KYWtYS8qZlbwnLqnFlyU4taQt7UzC1hOXXOLLmpRS0h
        b2rmlrCcOmeW3NSilpA3NXNLWE6dM0tualFLyJuauSUsp86ZJTe1qCXkTc3cEpZT58ySm1rUEvKmZm4J
        y6lzZslNLWopCmcvKQ5Xk7A/7yvKequYVDvhx98uyurUvObHzc/N/1/4Nc2vbX4PLk7N3NK+SHj+6pxZ
        clOLWlqbMMCN6nVhHz4fhvvzhf26aNXPwn+PFuX2a9sFochzZ2gwmcxf7pshN7Wopf128PhzwuD/Ogzw
        pNyfTlUPhz8p3ltsHHt2uxU8RZ4vQ33Lbf5yfwy5qUUt7adJfeN8WGo/eqn6XvhAeEO7NTTkeTLUpxzn
        L/fDkJta1NJ+eOXOC8Lf3z4nt9971ZNhW3fPt4k4Pj5ynr/cB0NualFLQyvvvyoMpcdP91Yt/Gkwve+a
        di/GS54bQ165z19u25CbWtTSkMrZa8IgOlzg6avqZ8W0+ot2b8ZJnhdDHmOYv9yuITe1qKWhHKr+PHwq
        9rjc5r5WPRH+Xvjqdq/GR54TQ12NZf5ym4bc1KKWhrCxfTAM/6dye2sp/Ck01r8OyPNhqIsxzV9uz5Cb
        WtRS3647fkUY/v/Iba2z5h+UXL3zonYvx0OdC0tWY5u/2pYlN7Wopb6V1RfkdmKorO5p93I81HmwZDW2
        +avtWHJTi1rq02T2ZrmNmNqo39ru7Tioc2DJYozzV9uw5KYWtdSXa750WXiH/bHcRlz9qNjY6efR2ynQ
        52D1VjXW+ettrJ6bWtRSXyb13y6sHWtl/YF2r/Onjt/SqsY6f7W+JTe1qKU+vP3YM8JJ/W+5fow1F6lu
        3Hlmu/d5U8dvaRVjnr9a35KbWtRSH8rtd8i1Y25av73d+7ypY7e0ijHPX61tyU0taump77n2NKlPL6zb
        ueoHoY/Pv1W0rA/Nm9avD/+9Pfz8D/Xv6dRpeSy5pY999dSa5zfm+eu1V89NLZpiZfW7YjK7df7tohfS
        /L+y/ru9XyvWoHQb6/zd1KKpVVa/LabVm9ojurjmy028CeTTmOfvphZNrS5XZSfV38i1KL3GPH83tWhS
        VSfnV5Gtmqu4Zf0dvSal08jn76YWTamyvrk9EruUvvZMurHP300tmlLzO7x2NJ1N5ZqUTmOfv5taNKWa
        f0La1fWz58s1KZ3GPn+3KG664Oj6rzy3PRK75veqNSmdxjz/sj7THolDWT0iF0+l5p5xXR2q/1SuSek0
        5vmX9XfbI3Eo6zvl4un0zvZI7Mr6PWI9Sqsxz/9T7ZE4TOsbiuZWyHoDKfSN9kjsyvpfxXqUViOdf3jN
        bmy/qj0Sp+YRSXIjqTR7c3skq2tu7CDXovQa4fyb5yT0prmSOqkfWthIMlU/n/99blWHZ1eH3/eLxXUo
        zcY2/+rB/m9Kc/D45eFd5V69wQRq7iLbfNfXxUxnN4UT2DwYUq9DaTaa+VdfdH3p86KaE1TWx4qyekzv
        QOxVXw7H8Jd/8A45/wxn+6/C///K4q+nvMpw/mX16Pw12XyL875qPiuYzg4MXll9RB64t+ZNbKg3srK+
        TR4L2WP+F655DWaveYdu3uXUiY6xsv7lqG4MOjTmj3Bi/3HhRMdaWX2i3Wv0hfmP3PT4n4R31jPyhEdV
        9b/FNfXL2r1GX5g/wgfAzfqkR9X72r1F35j/2B25NJzgfz/vhMfUiU43n8CKmD8O3VfOP83SA1hnvyo2
        vr7R7iWGwvwxv8FjTDdtbG46WdZvbPcOQ2P+CCf93XIY+978G6W6f8cZumH+CCf//eGd9/8Wh7JP7W2b
        iz7rwvwx/9RrLf8sOfw9tKze0u4F1oX5o5jfvLE6qQc1RNXDrptNol/MH8X133pW+NPgA/N3Zjm0Hmru
        j1hWH136eCmsB/PH3KH7XxGGdVf4QHhiYYCdC2uV1WaxMXt5uxXEivlj7uqdFxXT+sNhcN2fsLr3hNYP
        FdfOXtiuilQwfzxtY/tgMdl+V3gn/0zo4fmncgvDnv/ct/d+Tfi1ze9BHpg/FjTfYnrd8SvmNT/GuDB/
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYJyK
        4v8B+IK+1v3MwCEAAAAASUVORK5CYII=
</value>
  </data>
</root>